# ---- Build stage ----
FROM node:20-bookworm-slim AS build
WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY tsconfig.json ./
COPY src ./src
RUN npm run build

# ---- Runtime stage with Puppeteer ----
FROM node:20-bookworm-slim AS runtime
WORKDIR /app
ENV NODE_ENV=production
ENV RENDER_MODE=puppeteer

# Install Puppeteer dependencies
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    fonts-noto \
    fonts-noto-color-emoji \
    curl \
 && curl -fsSL https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/google-chrome-keyring.gpg \
 && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/google-chrome-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
 && apt-get update \
 && apt-get install -y google-chrome-stable \
 && rm -rf /var/lib/apt/lists/* \
 && which google-chrome-stable \
 && google-chrome-stable --version

ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1 \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable

# Copy only runtime deps
COPY package*.json ./
RUN npm ci --omit=dev
COPY --from=build /app/dist ./dist

# Set permissions for node user
RUN chown -R node:node /app
RUN chmod +x /usr/bin/google-chrome-stable

# Security: drop root
USER node
EXPOSE 8080
CMD ["node", "dist/index.js"]
